{"version":3,"sources":["api/api-service.js","history.js","actions/register-actions.js","api/register-api.js","reducers/register-reducer.js","actions/users-actions.js","api/users-api.js","reducers/users-reducer.js","reducers/rootReducer.js","components/form.js","components/LoginForm.js","components/RegisterForm.js","components/firstPage.js","components/userProfileModal.js","components/deleteUserModal.js","components/addUserModal.js","components/updateUserModal.js","components/Navbar.js","components/dashboard.js","appRouter/AppRouter.js","index.js","store.js"],"names":["publicApiRequest","endpoint","options","callback","url","concat","fetch","Object","objectSpread","headers","Content-Type","then","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","data","wrap","_context","prev","next","t0","status","console","log","json","sent","abrupt","stop","this","_x","apply","arguments","undefined","catch","error","privateApiRequest","token","Authorization","_ref2","_callee2","_context2","_x2","createHistory","actionTypes","login","credentials","dispatch","email","password","method","body","JSON","stringify","registerApi","response","status1","localStorage","setItem","history","push","type","register","initialState","loggedIn","getItem","registerError","loginError","get_single_user","userId","usersApi","user","get_users_list_success","users","get_users_list","page","usersList","fetchUsersListError","fetchUserError","rootReducer","combineReducers","registerReducer","state","length","usersReducer","action","filter","id","map","first_name","last_name","toConsumableArray","RawForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handle_change","e","input","target","value","inputName","name","setState","onChange","onSubmit","react_default","createElement","Form","Field","Input","fluid","label","submitError","Message","negative","Button","primary","React","Component","Login","loginSuccess","onLoginSuccess","onLoginFailure","getUsersList","Grid","centered","Column","computer","tablet","mobile","textAlign","Header","dividing","components_form","onSubmitSuccess","onSubmitFailure","submitSuccess","connect","Register","registerSuccess","onRegisterSuccess","onRegisterFailure","FirstPage","activeItem","handleItemClick","width","Divider","hidden","section","Menu","attached","tabular","Item","position","content","active","onClick","Segment","LoginForm","RegisterForm","userProfileModal","Modal","open","profileModalOpen","onClose","handleClose","closeIcon","size","dimmer","Content","Image","src","avatar","firstName","lastName","deleteUserModal","deleteModalOpen","icon","style","Actions","color","inverted","Icon","onDelete","AddUserModal","addModalOpen","Group","widths","UpdateUserModal","updateModalOpen","Navbar","onLogout","removeItem","logout","Dashboard","fetchError","onShowProfileClick","index","findIndex","onShowDeleteModal","onShowUpdateModel","onShowAddModal","handleInpuChange","onAddUser","addUser","onUpdate","updateUser","onConfirmDelete","deleteUser","parse","loadUsersFromLocalStorage","_this2","defaultPic","components_Navbar","addUserModal","updateUserModal","Row","List","divided","verticalAlign","floated","basic","info","getSingleUser","PrivateRoute","component","isAuthenticated","rest","objectWithoutProperties","Route","assign","render","Redirect","to","LoginRoute","AppRouter","Router","AppRouter_LoginRoute","path","exact","AppRouter_PrivateRoute","store","createStore","applyMiddleware","thunk","jsx","es","appRouter_AppRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fd16c641.chunk.js","sourcesContent":["const API_BASE_URL = 'https://reqres.in/api'\n\nexport const  publicApiRequest = (endpoint, options, callback) => {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    fetch(url, {\n        ...options,\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(async data => {\n            switch (data.status) {\n            case 404: {\n                // Not found\n                console.log('Error', 'Not found');\n                throw await data.json();\n            }\n            case 204: {\n                // No content in data.json()\n                console.log('Success', 'No content response');\n                callback({}, true);\n                return;\n            }\n            case 400: {\n                console.log('Error', 'Bad request');\n                throw await data.json();\n            }\n            default: {\n                return data.json();\n            }\n            }\n        })\n        .then(json => {\n            if (json === undefined) {\n                // If response status code == 204\n                return;\n            }\n            console.log('Success', json);\n            callback(json, true);\n        })\n        .catch(error => {\n            console.log('Error', error);\n            callback(error, false);\n        });\n}\n\nexport const privateApiRequest = (endpoint, options, token, callback) => {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    fetch(url, {\n        ...options,\n        headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(async data => {\n            switch (data.status) {\n            case 400: {\n                // Bad request\n                console.log('Error', 'Bad Request');\n                throw await data.json();\n            }\n            case 401: {\n                // Authorization failed\n                console.log('Error', 'Authorization failed');\n                throw await data.json();\n                // TODO Goto signin screen\n            }\n            case 404: {\n                // Not found\n                console.log('Error', 'Not found');\n                throw await data.json();\n            }\n            case 204: {\n                // No content in data.json()\n                console.log('Success', 'No content response');\n                callback({}, true);\n                return;\n            }\n            default: {\n                return data.json();\n            }\n            }\n        })\n        .then(json => {\n            if (json === undefined) {\n                // If response status code == 204\n                return;\n            }\n            console.log('Success', json);\n            callback(json, true);\n        })\n        .catch(error => {\n            console.log('Error', error);\n            // console.log('Json', json);\n            callback(error, false);\n        });\n}\n","/* eslint-disable import/no-extraneous-dependencies */\nimport createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();\n","import * as registerApi from '../api/register-api'\nimport history from '../history'\nexport const actionTypes = {\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n    REGISTER_FAILURE: 'REGISTER_FAILURE',\n    LOGOUT: 'LOGOUT'\n}\n\nconst login_success = () => ({\n    type: actionTypes.LOGIN_SUCCESS\n})\n\nconst login_failure = () => ({\n    type: actionTypes.LOGIN_FAILURE\n})\n\nexport const login = (credentials, callback) => (dispatch) => {\n    registerApi.login(credentials, (response, status1) => {\n        if(status1){\n            localStorage.setItem('token', response.token)\n            history.push('/dashboard')\n            dispatch(login_success())\n        }else{\n            dispatch(login_failure())\n        }\n\n        callback(response, status1)\n    })\n}\n\nconst register_success = () => ({\n    type: actionTypes.REGISTER_SUCCESS\n})\n\nconst register_failure = () => ({\n    type: actionTypes.REGISTER_FAILURE\n})\n\nexport const register = (credentials, callback) => (dispatch) => {\n    registerApi.register(credentials, (response, status1) => {\n        if(status1){\n            localStorage.setItem('token', response.token)\n            dispatch(register_success())\n            history.push('/dashboard')\n\n        }else{\n            dispatch(register_failure())\n        }\n\n        callback(response, status1)\n    })\n}\n\nexport const logout = () => ({\n    type: actionTypes.LOGOUT\n})","import { publicApiRequest } from './api-service';\n\nexport const register = (credentials, callback) => {\n    const url = 'register'\n    const data = {\n        email: credentials.email,\n        password: credentials.password \n    }\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(data)\n    }\n\n    publicApiRequest(url, options, callback)\n}\n\nexport const login = (credentials, callback) => {\n    const url = 'login';\n    const data = {\n        email: credentials.email,\n        password: credentials.password \n    };\n    const options = {\n        method: 'POST',\n        body: JSON.stringify(data)\n    };\n   \n    publicApiRequest(url, options, callback);\n}\n\n","import { actionTypes } from '../actions/register-actions'\n\nconst initialState = {\n    loggedIn: !!localStorage.getItem(\"token\"),\n    registerError: '',\n    loginError: ''\n}\n\nexport const registerReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                loggedIn: true\n            }\n        case actionTypes.REGISTER_SUCCESS:\n            return {\n                ...state,\n                loggedIn: true \n            }\n        case actionTypes.LOGIN_FAILURE:\n            return {\n                ...state,\n                loggedIn:false,\n                loginError:true\n            }\n        case actionTypes.REGISTER_FAILURE:\n            return {\n                ...state,\n                loggedIn:false,\n                registerError:true\n            }\n        case actionTypes.LOGOUT:\n            return {\n                ...state,\n                    loggedIn:false\n            }\n        default : return state\n    }\n\n}","import * as usersApi from '../api/users-api'\n\nexport const actionTypes = {\n    GET_SIGNLE_USER_SUCCESS: 'GET_SINGLE_USER_SUCCESS',\n    GET_SINGLE_USER_FAILURE: 'GET_SINGLE_USER_FAILURE',\n    GET_USERS_LIST_SUCCESS: 'GET_USERS_LIST_SUCCESS',\n    GET_USERS_LIST_FAILURE: 'GET_USERS_LIST_FAILURE',\n    DELETE_USER_SUCCESS: 'DELETE_USER_SUCCESS',\n    UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS',\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS'\n}\n\nconst get_single_success = (user) => ({\n    type: actionTypes.GET_SIGNLE_USER_SUCCESS,\n    user:user\n})\n\nconst get_single_failure = () => ({\n    type: actionTypes.GET_SINGLE_USER_FAILURE\n})\nexport const get_single_user = (userId, callback) => (dispatch) => {\n    const token = localStorage.getItem('token')\n    usersApi.getSingleUser(token, userId, (response, status1) => {\n        if(status1){\n            dispatch(get_single_success(response.data))\n        }else{\n            dispatch(get_single_failure())\n        }\n\n        callback(response, status1)\n\n    })\n\n}\n\nexport const get_users_list_success = (users) => ({\n    type: actionTypes.GET_USERS_LIST_SUCCESS,\n    users: users\n})\n\nconst get_users_list_failure = () => ({\n    type: actionTypes.GET_USERS_LIST_FAILURE\n})\n\nexport const get_users_list = (page, callback) => (dispatch) => {\n    const token = localStorage.getItem('token')\n    usersApi.getUsersList(token, page, (response, status1) => {\n        if(status1){\n            dispatch(get_users_list_success(response.data))\n        }else{\n            dispatch(get_users_list_failure())\n        }\n\n        callback(response, status1)\n    })\n\n}\n\nexport const deleteUser = (userId) => ({\n    type: actionTypes.DELETE_USER_SUCCESS,\n    userId: userId\n})\n\nexport const updateUser = (credentials) => ({\n    type: actionTypes.UPDATE_USER_SUCCESS,\n    credentials: credentials\n})\n\nexport const addUser = (credentials) => ({\n    type: actionTypes.ADD_USER_SUCCESS,\n    credentials: credentials\n})","import { privateApiRequest } from './api-service'\n\nexport const getSingleUser = (token, userId, callback) => {\n    const url = `users/${userId}`\n    const options = {\n        method: 'GET',\n    }\n\n    privateApiRequest(url, options, token, callback)\n}\n\nexport const getUsersList = (token, page, callback) => {\n    const url = `users/?page=${page}`\n    const options = {\n        method: 'GET'\n    }\n\n    privateApiRequest(url, options, token, callback)\n}","import { actionTypes } from '../actions/users-actions'\n\nconst initialState = {\n    usersList : [],\n    user: undefined,\n    fetchUsersListError: false,\n    fetchUserError: false\n}\n\nexport const usersReducer = (state = initialState, action) => {\n    console.log(action)\n    switch (action.type) {\n        case actionTypes.GET_SIGNLE_USER_SUCCESS:\n            return {\n                ...state,\n                    user:action.user\n            }\n        case actionTypes.GET_SINGLE_USER_FAILURE:\n            return {\n                ...state,\n                    fetchUserError:true\n            }\n        case actionTypes.GET_USERS_LIST_SUCCESS:\n            return {\n                ...state,\n                    usersList:action.users\n            }\n        case actionTypes.GET_USERS_LIST_FAILURE:\n            return {\n                ...state,\n                    fetchUsersListError:true\n            }\n        case actionTypes.DELETE_USER_SUCCESS:\n            let usersList = state.usersList.filter((user) =>  user.id!== action.userId )\n            return {\n                ...state,\n                    usersList:usersList\n            }\n        case actionTypes.UPDATE_USER_SUCCESS:\n            usersList = state.usersList.map((user) => {\n                if (user.id === action.credentials.id){\n                    return {\n                        ...user,\n                        ...action.credentials\n                    };\n                }else{\n                    return user\n                }\n            })\n            return {\n                ...state,\n                    usersList:usersList\n            }\n        \n        case actionTypes.ADD_USER_SUCCESS:\n            const id = state.usersList.length + 1\n            const user = {\n                id: id,\n                first_name: action.credentials.first_name,\n                last_name: action.credentials.last_name \n            }\n            usersList = [...state.usersList,user]\n            return {\n                ...state,\n                usersList: usersList\n            }\n        default: return state\n            \n    }\n}","import {combineReducers} from 'redux'\nimport { registerReducer } from './register-reducer'\nimport { usersReducer } from './users-reducer'\nconst rootReducer = combineReducers({\n    registerReducer,\n    usersReducer    \n})\n\nexport default rootReducer;","import React from 'react'\nimport { Button, Message, Form } from 'semantic-ui-react'\n\n\nclass RawForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            credentials: {\n                email: props.email,\n                password: props.password\n            }\n        }\n    }\n\n    handle_change= (e) => {\n        const input = e.target.value;\n        let credentials = this.state.credentials;\n        const inputName = e.target.name\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))  \n        this.props.onChange(inputName, input)  \n    }\n\n    onSubmit = () => {\n        this.props.onSubmit(this.state.credentials)\n    }\n    \n\n    render(){\n        return(\n            <div>\n                <Form onSubmit={this.onSubmit} >\n                        <Form.Field>\n                            <Form.Input\n                                fluid\n                                label=\"ایمیل\"\n                                name=\"email\"\n                                value={this.state.credentials.email}\n                                onChange={this.handle_change}                                \n                            />\n                        </Form.Field>\n                        \n                        <Form.Field>\n                            <Form.Input\n                                fluid\n                                label=\"رمز عبور\"\n                                name=\"password\"\n                                type='password'\n                                value={this.state.credentials.password}\n                                onChange={this.handle_change}\n                            />                 \n                        </Form.Field>\n                    {this.props.submitError && (\n                        <Message negative>\n                            مشکلی پیش آمده است لطفا مجدد امتحان کنید.\n                        </Message>\n                    )}\n                    <Button primary type='submit'>ورود</Button>\n                </Form>\n            </div>\n        )\n    }\n}\nexport default RawForm","import React from 'react'\nimport {login} from '../actions/register-actions'\nimport { get_users_list } from '../actions/users-actions'\nimport {connect} from 'react-redux'\nimport {Grid, Header} from 'semantic-ui-react'\nimport RawForm from './form'\n\nclass Login extends React.Component{\n    state={\n        credentials:{\n            password:'',\n            email:'',\n        },\n        loginError:false,\n        loginSuccess:false\n      }\n\n    onSubmit = () => {\n        this.props.login(this.state.credentials , (response , status) => {\n            if(status){\n                this.onLoginSuccess()\n            }else{\n                this.onLoginFailure()\n            }\n        } )\n    }\n    \n    handle_change= (inputName, input) => {\n        let credentials = this.state.credentials;\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))    \n    }\n    \n    onLoginFailure = () => {\n        this.setState(() => ({loginError: true, loginSuccess: false}))\n    }\n\n    onLoginSuccess = () => {\n\n        this.setState(() => ({loginSuccess: true, loginError: false}))\n        this.props.getUsersList(this.state.page, (response, status) => {})\n    }\n    render(){\n        \n        return(\n            <div>\n                <Grid centered >\n                    <Grid.Column computer={15} tablet={12}  mobile={14} textAlign=\"right\">\n                        <Header dividing>\n                            فرم ورود\n                        </Header>\n\n                        <RawForm \n                            onSubmit = {this.onSubmit}\n                            email = {this.state.credentials.email}\n                            password = {this.state.credentials.password}\n                            onSubmitSuccess = {this.onLoginSuccess}\n                            onSubmitFailure = {this.onLoginFailure}\n                            submitError = {this.state.loginError}\n                            submitSuccess = {this.state.loginSuccess}\n                            onChange = {this.handle_change}\n                        />               \n                    </Grid.Column>    \n                </Grid>\n            </div>\n            \n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        login : (credentials, callback) => dispatch(login(credentials, callback)),\n        getUsersList : (page, callback) => dispatch(get_users_list(page, callback)),\n\n    }\n}\nexport default connect(undefined,mapDispatchToProps)(Login)","import React from 'react'\nimport {register} from '../actions/register-actions'\nimport { get_users_list } from '../actions/users-actions'\nimport {connect} from 'react-redux'\nimport {Grid, Header} from 'semantic-ui-react'\nimport RawForm from './form'\n\nclass Register extends React.Component{\n    state={\n        credentials:{\n            password:'',\n            email:'',\n        },\n        registerError:false,\n        registerSuccess:false\n      }\n\n    onSubmit = () => {\n        this.props.register(this.state.credentials , (response , status) => {\n            if(status){\n                this.onRegisterSuccess()\n            }else{\n                this.onRegisterFailure()\n            }\n        } )\n    }\n    \n    handle_change= (inputName, input) => {\n        let credentials = this.state.credentials;\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))    \n    }\n    \n    onRegisterFailure = () => {\n        this.setState(() => ({ registerError: true, registerSuccess: false}))\n    }\n\n    onRegisterSuccess = () => {\n        this.setState(() => ({ registerSuccess: true, registerError: false}))\n        this.props.getUsersList(this.state.page, (response, status) => {})\n\n    }\n    render(){\n        \n        return(\n            <div>\n                <Grid centered >\n                    <Grid.Column computer={15} tablet={12}  mobile={14} textAlign=\"right\">\n                        <Header dividing>\n                            فرم ثبت نام\n                        </Header>\n\n                        <RawForm \n                            onSubmit = {this.onSubmit}\n                            email = {this.state.credentials.email}\n                            password = {this.state.credentials.password}\n                            onSubmitSuccess = {this.onRegisterSuccess}\n                            onSubmitFailure = {this.onRegisterFailure}\n                            submitError = {this.state.registerError}\n                            submitSuccess = {this.state.registerSuccess}\n                            onChange = {this.handle_change}\n                        />               \n                    </Grid.Column>    \n                </Grid>\n            </div>\n            \n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        register : (credentials, callback) => dispatch(register(credentials, callback)),\n        getUsersList : (page, callback) => dispatch(get_users_list(page, callback)),\n    }\n}\nexport default connect(undefined,mapDispatchToProps)(Register)","import React from 'react'\nimport LoginForm from './LoginForm'\nimport RegisterForm from './RegisterForm'\n\nimport {Grid, Divider, Menu, Segment} from 'semantic-ui-react'\nclass FirstPage extends React.Component{\n    state={\n        activeItem:'login'\n    } \n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n    render(){\n        let activeItem = this.state.activeItem\n        return(\n            <Grid centered>\n                <Grid.Column width=\"10\">\n                <Divider hidden section/>\n                <Menu attached='top' tabular >\n                    <Menu.Item \n                        position=\"right\"\n                        name='register'\n                        content=\"ثبت نام\" \n                        active={activeItem === 'register'} \n                        onClick={this.handleItemClick} \n                    />\n                    <Menu.Item\n                        name='login'\n                        content=\"ورود\" \n                        active={activeItem === 'login'}\n                        onClick={this.handleItemClick}\n                    />\n                 </Menu>\n      \n                <Segment attached='bottom'>\n                    {this.state.activeItem === 'login' ? <LoginForm /> : <RegisterForm />}\n                </Segment>\n                \n                </Grid.Column>\n                \n            </Grid>\n        )\n    }\n}\n\nexport default FirstPage","import React from 'react'\nimport { Modal, Image, Grid} from 'semantic-ui-react'\n\nexport default (props) => (\n    <Modal\n        open={props.profileModalOpen}\n        onClose={props.handleClose}\n        closeIcon\n        size = \"tiny\"\n        dimmer={true}\n    >\n    <Modal.Content>\n        <Grid centered> \n            <Image  src={props.avatar} />\n        </Grid>\n        <Grid centered>        \n            <p>{props.firstName} {props.lastName}</p>\n        </Grid>        \n\n    </Modal.Content>\n  </Modal>\n\n)","import React from 'react'\nimport { Modal, Header, Button, Icon} from 'semantic-ui-react'\n\nexport default (props) => (\n    <Modal\n        open={props.deleteModalOpen}\n        onClose={props.handleClose}\n        closeIcon\n        size = \"tiny\"\n        dimmer = \"blurring\"\n    >\n        <Header icon='trash' />\n        <Modal.Content >\n            <p style={{textAlign:\"right\"}}> \n                آیااز حذف کردن این کاربر اطمینان دارید؟\n            </p>\n        </Modal.Content>\n        <Modal.Actions>\n            <Button \n                 \n                color='red' \n                inverted\n            >\n                <Icon name='remove' /> خیر\n            </Button>\n            <Button \n                onClick={props.onDelete}\n                color='green' \n                inverted\n            >\n                <Icon name='checkmark' /> بله\n            </Button>\n        </Modal.Actions>\n    </Modal>\n\n)","import React from 'react'\nimport { Modal, Header, Button, Icon, Form} from 'semantic-ui-react'\n\nclass AddUserModal extends React.Component{\n\n    state={\n        credentials:{\n            first_name:'',\n            last_name:''\n        }\n    }\n\n    handle_change= (e) => {\n        const input = e.target.value;\n        let credentials = this.state.credentials;\n        const inputName = e.target.name\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))  \n        this.props.onChange(inputName, input)  \n    }\n\n    render(){\n        return(\n            <Modal\n                open={this.props.addModalOpen}\n                onClose={this.props.handleClose}\n                closeIcon\n                size = \"tiny\"\n                dimmer = \"blurring\"\n            >\n                <Header icon=\"add user\" />\n                <Modal.Content >\n                    <Form>\n                        <Form.Group widths='equal'>\n                            \n                            <Form.Input \n                                name = \"last_name\"\n                                value = {this.state.credentials.last_name} \n                                onChange = {this.handle_change} \n                                fluid \n                                label='نام خانوادگی' \n                            />\n                            <Form.Input \n                                name = \"first_name\" \n                                value = {this.state.credentials.first_name}\n                                onChange = {this.handle_change} \n                                fluid \n                                label='نام' \n                            />\n                        </Form.Group>\n                \n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button \n                        onClick={this.props.onSubmit}\n                        color='green' \n                        inverted\n                    >\n                        ثبت\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n    \n        )\n    }\n\n}\n\nexport default AddUserModal;","import React from 'react'\nimport { Modal, Header, Button, Form } from 'semantic-ui-react'\n\nclass UpdateUserModal extends React.Component{\n\n    constructor(props){\n        super(props)\n        console.log(props)\n        this.state = {\n            credentials:{\n                first_name: '',\n                last_name: ''\n            }\n        }\n    }\n\n    handle_change= (e) => {\n        const input = e.target.value;\n        let credentials = this.state.credentials;\n        const inputName = e.target.name\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))  \n        this.props.onChange(inputName, input)  \n    }\n\n    render(){\n        return(\n            <Modal\n                open={this.props.updateModalOpen}\n                onClose={this.props.handleClose}\n                closeIcon\n                size = \"tiny\"\n                dimmer = \"blurring\"\n            >\n                <Header icon=\"edit\" />\n                <Modal.Content >\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Input \n                                name = \"last_name\"\n                                value = {this.state.credentials.last_name} \n                                onChange = {this.handle_change} \n                                fluid \n                                label='نام خانوادگی' \n                            />\n                            <Form.Input \n                                name = \"first_name\" \n                                value = {this.state.credentials.first_name}\n                                onChange = {this.handle_change} \n                                fluid \n                                label='نام' \n                            />\n                        \n                        </Form.Group>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button \n                        onClick={this.props.onSubmit}\n                        color='green' \n                        inverted\n                    >\n                        ثبت\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n    \n        )\n    }\n\n}\n\nexport default UpdateUserModal;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/register-actions'\nimport {Menu} from 'semantic-ui-react'\n\nclass Navbar extends React.Component{\n\n    onLogout = () => {\n        localStorage.removeItem('token')\n        this.props.logout()\n    }\n    render(){\n        return(\n            <Menu fluid size=\"large\">\n                <Menu.Item\n                onClick={this.onLogout}\n                >\n                    خروج\n                </Menu.Item>\n            \n            </Menu>\n        \n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        logout : () => dispatch(logout())\n    }\n}\n\nexport default connect(undefined, mapDispatchToProps)(Navbar)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {List, Button, Grid, Image, Header, Message, Divider} from 'semantic-ui-react'\nimport {get_single_user, get_users_list, deleteUser, updateUser, addUser, get_users_list_success} from '../actions/users-actions'\nimport ProfileModal from './userProfileModal'\nimport DeleteModal from './deleteUserModal'\nimport AddModal from './addUserModal'\nimport UpdateModal from './updateUserModal'\nimport Navbar from './Navbar'\n\nclass Dashboard extends React.Component{\n    \n    state = {\n        credentials:{\n            first_name:'',\n            last_name:''\n        },\n        fetchError: false,\n        profileModalOpen: false,\n        deleteModalOpen: false,\n        updateModalOpen: false,\n        addModalOpen: false,\n        user: ''\n    }\n    componentDidMount(){\n       const users = JSON.parse(localStorage.getItem('users'))\n       this.props.loadUsersFromLocalStorage(users)\n    }\n\n    componentDidUpdate(){\n        localStorage.setItem('users',JSON.stringify(this.props.usersList))\n    }\n    handleClose = (type) => {\n        switch (type) {\n            case 'profile':\n                this.setState(() => ({profileModalOpen: false}))\n                break;\n            case 'delete':\n                this.setState(() => ({deleteModalOpen: false}))\n                break\n            case 'add':\n                this.setState(() => ({addModalOpen: false}))\n                break\n            case 'update':\n                this.setState(() => ({updateModalOpen: false}))\n                break\n            default:\n                break;\n        }\n        this.setState(() => ({user:''}))\n\n    }\n    \n    onShowProfileClick = (id) => {\n        const index = this.props.usersList.findIndex(user => user.id === id)\n        const user = this.props.usersList[index]\n        this.setState(() => ({user: user , profileModalOpen:true}))\n    }\n\n    onShowDeleteModal = (id) => {\n        const index = this.props.usersList.findIndex(user => user.id === id)\n        const user = this.props.usersList[index]\n        this.setState(() => ({user: user , deleteModalOpen:true}))\n    }\n\n    onShowUpdateModel = (id) => {\n        const index = this.props.usersList.findIndex(user => user.id === id)\n        const user = this.props.usersList[index]\n        this.setState(() => ({user: user , updateModalOpen:true}))\n    }\n\n    onShowAddModal = () => {\n        this.setState(() => ({addModalOpen: true}))\n    }\n    \n    handleInpuChange= (inputName, input) => {\n        let credentials = this.state.credentials;\n        credentials[inputName] = input\n        this.setState(() => ({credentials : credentials}))    \n    }\n    \n    onAddUser = () => {\n        this.props.addUser(this.state.credentials)\n    }\n    onUpdate = () => {\n        const credentials = {\n            id: this.state.user.id,\n            first_name: this.state.credentials.first_name,\n            last_name: this.state.credentials.last_name\n        }\n        this.props.updateUser(credentials)\n    }\n    onConfirmDelete = () => {\n        this.props.deleteUser(this.state.user.id)    \n    }\n\n    render(){\n\n        const defaultPic = \"https://images.vexels.com/media/users/3/145908/preview2/52eabf633ca6414e60a7677b0b917d92-male-avatar-maker.jpg\"\n        return(\n            <Grid centered textAlign=\"right\">\n                <Navbar />\n                <ProfileModal \n                    profileModalOpen = {this.state.profileModalOpen}\n                    handleClose = {() => this.handleClose('profile')}\n                    avatar = {this.state.user.avatar ? this.state.user.avatar : defaultPic}\n                    firstName = {this.state.user.first_name}\n                    lastName = {this.state.user.last_name}\n                />\n                <DeleteModal\n                    deleteModalOpen = {this.state.deleteModalOpen}\n                    handleClose = {() => this.handleClose('delete')}\n                    onDelete = {this.onConfirmDelete}\n                />\n                <AddModal \n                    addModalOpen = {this.state.addModalOpen}\n                    handleClose = {() => this.handleClose('add')}\n                    onSubmit = {this.onAddUser}\n                    onChange = {this.handleInpuChange}\n                />\n                <UpdateModal\n                    updateModalOpen = {this.state.updateModalOpen}\n                    handleClose = {() => this.handleClose('update')}\n                    onSubmit = {this.onUpdate}\n                    onChange = {this.handleInpuChange}\n                />\n                <Grid.Row>\n                    <Grid.Column width=\"10\">    \n                        <br></br>\n                        <Header dividing textAlign=\"right\">\n                            لیست کاربران\n                        </Header>\n                    </Grid.Column>\n                </Grid.Row>\n                \n                <Grid.Column width=\"10\">\n                    {this.state.fetchError ? (\n                        <Message negative>\n                            مشکلی در گرفتن کاربران پیش آمده است.\n                        </Message>\n                    ): (\n                        <div>\n                            {this.props.usersList.length > 0 ? (\n                                    \n                                <List divided verticalAlign='middle'>\n                                    \n                                            {this.props.usersList.map((user) => (\n                                                <List.Item>\n                                                        <List.Content floated='right'>\n                                                            <Button\n                                                                onClick = {() => this.onShowDeleteModal(user.id)}    \n                                                                basic \n                                                                color='red' \n                                                                content='Red'\n                                                            >\n                                                                حذف\n                                                            </Button>\n                                                            <Button\n                                                                onClick = {() => this.onShowUpdateModel(user.id)}\n                                                                basic \n                                                                color='orange' \n                                                                content='orange'\n                                                            >\n                                                                ایجاد تغییر\n                                                            </Button>\n                                                            <Button\n                                                                onClick = {() => this.onShowProfileClick(user.id)}    \n                                                                basic \n                                                                color='blue' \n                                                                content='blue'\n                                                            >\n                                                            مشاهده‌ی پروفایل\n                                                        </Button>  \n                                                        </List.Content>\n                                                            <Image avatar src={user.avatar ? user.avatar : defaultPic} />\n                                                        <List.Content>{user.first_name} {user.last_name}</List.Content>\n                                                </List.Item>                        \n                                            ))}\n                                        \n                                    \n                                    \n                                </List>):(\n                                    <Message info>\n                                        کاربری وجود ندارد\n                                    </Message>\n                            )}\n                            <Divider hidden section/>\n                            <Grid centered>\n                                <Button \n                                    onClick = {this.onShowAddModal}\n                                    color = \"green\"\n                                >\n                                    اضافه کردن کاربر\n                                </Button>                        \n                            </Grid>\n\n                        </div>\n                    )}\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        usersList : state.usersReducer.usersList\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        getUsersList : (page, callback) => dispatch(get_users_list(page, callback)),\n        getSingleUser: (userId, callback) => dispatch(get_single_user(userId, callback)),\n        deleteUser: (userId) => dispatch(deleteUser(userId)),\n        updateUser: (credentials) => dispatch(updateUser(credentials)),\n        addUser: (credentials) => dispatch(addUser(credentials)),\n        loadUsersFromLocalStorage: (users) => dispatch(get_users_list_success(users))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from 'react';\nimport {connect} from 'react-redux'\nimport { Router, Route, Redirect } from 'react-router-dom';\nimport FirstPage from '../components/firstPage'\nimport Dashboard from '../components/dashboard'\nimport history from '../history'\n\nconst PrivateRoute = ({component: Component, isAuthenticated, ...rest}) => (\n    <Route {...rest} render = {(props) => (\n        isAuthenticated === true ? <Component {...props} /> : <Redirect to='/' />\n        \n        )}\n    />\n)\n\nconst LoginRoute = ({component: Component,isAuthenticated ,...rest}) => (\n        <Route {...rest} render = {(props) => (\n            isAuthenticated === true ? <Redirect to='/dashboard'/> : <Component {...props} /> \n            )}    \n        />\n)\nclass AppRouter extends React.Component{\n    render(){\n        return(\n            <Router history={history}>\n                <div>\n                    <LoginRoute path=\"/\" isAuthenticated={this.props.isAuthenticated} component={FirstPage} exact={true}/>\n                    <PrivateRoute isAuthenticated={this.props.isAuthenticated} path=\"/dashboard\" component={Dashboard} />\n                </div>\n            </Router>    \n    \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        isAuthenticated: state.registerReducer.loggedIn\n    }\n}\nexport default connect(mapStateToProps)(AppRouter) ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport configureStore from './store'\nimport AppRouter from './appRouter/AppRouter'\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst store = configureStore()\nconst jsx = (\n    <Provider store={store}>\n        <AppRouter/>\n    </Provider>\n)\nReactDOM.render(jsx, document.getElementById('root'));\n","import {createStore , applyMiddleware} from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nexport default () =>  createStore(rootReducer , applyMiddleware(thunk))"],"sourceRoot":""}